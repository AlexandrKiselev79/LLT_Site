@model Nop.Plugin.Misc.LLT.Models.Tournament.TournamentDetailsModel

@using Nop.Plugin.Misc.LLT.Enums
@using Nop.Core.Infrastructure
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework.Events
@using Nop.Services.Events
@{
    Html.AddScriptParts("~/Scripts/jquery.tmpl.min.js");
}
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.GeneralInfo.Id)



<div id="tournament-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            Информация
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            Игроки
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            Матчи
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            Результаты
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabPlayers()
    </div>
    <div>
        @TabMatches()
    </div>
    <div>
        @TabResults()
    </div>
</div>
<script>
    $(document).ready(function() {
        $("#tournament-edit").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>


@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GeneralInfo.Name):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.GeneralInfo.Name)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GeneralInfo.Type):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.GeneralInfo.Type, ((TournamentType)Model.GeneralInfo.Type).ToSelectList())
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GeneralInfo.StartDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.GeneralInfo.StartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GeneralInfo.EndDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.GeneralInfo.EndDate)
            </td>
        </tr>
    </table>
}
@helper TabPlayers()
{
    if (Model.GeneralInfo.Id > 0)
    {
        <div id="tournament-players-grid"></div>
        <script>
            $(document).ready(function() {
                $("#tournament-players-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("PlayersList", "TournamentAdmin", new {tournamentId = Model.GeneralInfo.Id}))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            create: {
                                url: "@Html.Raw(Url.Action("PlayerInsert", "TournamentAdmin", new {tournamentId = Model.GeneralInfo.Id}))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            destroy: {
                                url: "@Html.Raw(Url.Action("PlayerDelete", "TournamentAdmin"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    PlayerId: { editable: true, type: "number" }
                                    Id: { editable: false, type: "number" }
                                }
                            }
                        },
                        requestEnd: function(e) {
                            if (e.type == "create" || e.type == "update") {
                                this.read();
                            }
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    pageable: {
                        refresh: true,
                        numeric: false,
                        previousNext: false,
                        info: false
                    },
                    toolbar: ["create"],
                    edit: function(e) {
                        if (e.model.isNew()) {
                            //little hack here
                            //pre-select the first value of kendoui dropdownlist datasource
                            //for some reasons (maybe, bug) it always sends 0
                            //if no value has been selected (changed) in the dropdownlist
                            if (allPlayers.length > 0) {
                                e.model.PlayerId = allPlayers[0].Id;
                            }
                        }
                    },
                    editable: {
                        confirmation: false,
                        mode: "inline"
                    },
                    scrollable: false,
                    columns: [
                        {
                            field: "Id",
                            title: "Номер",
                            width: 150
                        },  {
                            field: "FullName",
                            title: "Полное имя",
                            width: 150
                        }, {
                            field: "Level",
                            title: "Уровень",
                            width: 150
                        },
                        {
                            command: [
                                {
                                    name: "destroy",
                                    text: "@T("Admin.Common.Delete")"
                                }
                            ],
                            width: 200
                        }
                    ]
                });
            });

            //local datasource
            var allPlayers = [
                @for (int i = 0; i < Model.Players.Count; i++)
            {
                var player = Model.Players[i];
                <text>
            {
                Id: @(player.Id),
                Name: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(player.FullName)))"
            }
                </text>
                if (i != Model.Players.Count - 1)
                {
                    <text>,</text>
                }
            }
            ];
        </script>
    }
    else
    {
        @T("Admin.Promotions.Discounts.Requirements.SaveBeforeEdit")
    }
}
@helper TabMatches()
{
    if (Model.GeneralInfo.Id > 0)
    {
            
    }
    else
    {
        @T("Admin.Promotions.Discounts.Requirements.SaveBeforeEdit")
    }
}
@helper TabResults()
{
    if (Model.GeneralInfo.Id > 0)
    {
        
    }
    else
    {
        @T("Admin.Promotions.Discounts.AppliedToProducts.SaveBeforeEdit")
    }
}